- name: Unpack case
  shell:
    cmd: "tar -xf {{ temp_dir }}/cp4s_arch/.ibm-pak/data/cases/{{ cp4s_case_name }}/{{ cp4s_cases[0] }}/ibm-cp-security-{{ cp4s_cases[0] }}.tgz -C {{ temp_dir }}/cp4s_arch/.ibm-pak/data/cases/{{ cp4s_case_name }}/{{ cp4s_cases[0] }}"
  when: internet_type == 'A'

- name: Configure defaults file
  ansible.builtin.template:
    src: "cp4s_values.j2"
    dest: "{{ temp_dir }}/cp4s_arch/.ibm-pak/data/cases/{{ cp4s_case_name }}/{{ cp4s_cases[0] }}/ibm-cp-security/inventory/ibmSecurityOperatorSetup/files/values.conf"
  vars:
    cp4s_backup_size_final: "{{ '' if cp4s_backup_size == '0' else cp4s_backup_size }}"
    cp4s_option_drc: "{{ 'true' if cp4s_options[0] == 'Y' else false }}"
    cp4s_option_rm: "{{ 'true' if cp4s_options[1] == 'Y' else false }}"
    cp4s_option_ti: "{{ 'true' if cp4s_options[2] == 'Y' else false }}"
  when: internet_type == 'A'

- name: Deploy CP4S
  shell:
    cmd: "IBMPAK_HOME={{ temp_dir }}/cp4s_arch/ IBMPAK_LAUNCH_SKIP_PREREQ_CHECK=true oc ibm-pak launch {{ cp4s_case_name }} --version {{ cp4s_cases[0] }} --inventory ibmSecurityOperatorSetup --action install --namespace cp4s --tolerance 1 --args \"--acceptLicense true --inputDir {{ temp_dir }}/cp4s_arch/.ibm-pak/data/cases/{{ cp4s_case_name }}/{{ cp4s_cases[0] }}\""
  when: internet_type == 'A'

- name: Check presence of cloudctl tool
  stat:
    path: "{{ temp_dir }}/cp4s_arch/cloudctl-linux-amd64.tar.gz"
  register: cloudctl_tool
  ignore_errors: true
  when: internet_type == 'A'

- name: Stop if cloudct tool is not uploaded for air-gapped installation
  fail:
    msg: "Please upload cloud tool to download directory"
  with_items: "{{ cloudctl_tool.results }}"
  when: internet_type == 'A' and not cloudctl_tool.stat.exists

- name: Unpack cloudctl tools
  shell:
    cmd: "tar xf {{ temp_dir }}/cp4s_arch/{{ item.src }} -C /usr/local/bin"
  with_items:
    - { src: "cloudctl-linux-amd64.tar.gz" }
  when: internet_type == 'A'

- name: Set ICS admin password
  shell:
    cmd: "cloudctl pm update-secret ibm-common-services platform-auth-idp-credentials -f -d admin_password='{{ ics_admin_password }}'"
  when: false

- name: Wait for authentication changes
  pause:
    minutes: 3
  when: false

- name: Wait for successful password change
  shell:
    cmd: "oc get pods --no-headers -n ibm-common-services|grep -v Completed|grep -v Running|wc -l"
  register: ics_pods_status
  until: "ics_pods_status.stdout == \"0\""
  retries: 80
  delay: 20
  when: false

