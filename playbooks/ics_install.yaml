- name: Stop if cloudct tool is not uploaded for air-gapped installation
  ansible.builtin.fail:
    msg: "Please upload cloud tool to download directory"
  with_items: "{{ cloudctl_tool.results }}"
  when: item.stat.exists == False and internet_type == 'A'

- name: Set catalog reference for CPFS and GI (offline)
  ansible.builtin.shell:
    cmd: "sed -i \"s/image:.*:5000/image: registry.{{ domain }}:5000/\" {{ temp_dir }}/{{ offline_inventory }}/.ibm-pak/data/mirror/ibm-guardium-insights/{{ gi_case_version }}/catalog-sources.yaml"
  when: internet_type == 'A' and install_gi == 'Y'

- name: Set imagecontentsourcepolicy reference for CPFS and GI (offline)
  ansible.builtin.shell:
    cmd: "sed -i \"s/- .*:5000/- registry.{{ domain }}:5000/\" {{ temp_dir }}/{{ offline_inventory }}/.ibm-pak/data/mirror/ibm-guardium-insights/{{ gi_case_version }}/image-content-source-policy.yaml"
  when: internet_type == 'A' and install_gi == 'Y'

- name: Install catalogs for CPFS and GI (offline)
  ansible.builtin.shell:
    cmd: "oc apply -f {{ temp_dir }}/{{ offline_inventory }}/.ibm-pak/data/mirror/ibm-guardium-insights/{{ gi_case_version }}/catalog-sources.yaml"
  when: internet_type == 'A' and install_gi == 'Y'

- name: Install image content source policy for CPFS and GI (offline)
  ansible.builtin.shell:
    cmd: "oc apply -f {{ temp_dir }}/{{ offline_inventory }}/.ibm-pak/data/mirror/ibm-guardium-insights/{{ gi_case_version }}/image-content-source-policy.yaml"
  when: internet_type == 'A' and install_gi == 'Y'

- name: Switch ICS inventory to portable registry
  ansible.builtin.shell:
    cmd: "cloudctl case launch --case {{ temp_dir }}/{{ offline_inventory }}/{{ ics_manifest_dir }}/ibm-cp-common-services-{{ ics_case }}.tgz --inventory {{ ics_case_inventory_setup }} --action configure-cluster-airgap --namespace {{ ics_operator_namespace }}  --args \"--registry registry.{{ domain }}:5000 --user {{ repo_user }} --pass {{ repo_user_password }} --inputDir {{ temp_dir }}/{{ offline_inventory }}/{{ ics_manifest_dir }}\""
  when: internet_type == 'A' and install_gi == 'N'

- name: Install ICS catalog
  ansible.builtin.shell:
    cmd: "cloudctl case launch --case {{ temp_dir }}/{{ offline_inventory }}/{{ ics_manifest_dir }}/ibm-cp-common-services-{{ ics_case }}.tgz --inventory {{ ics_case_inventory_setup }}  --action installCatalog --namespace openshift-marketplace --args \"--registry registry.{{ domain }}:5000\""
  when: internet_type == 'A' and install_gi == 'N'

