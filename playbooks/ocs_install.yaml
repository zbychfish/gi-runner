- name: ODF deployment
  block:
  - name: Configure ODF operator file
    template:
      src: "odf-op.j2"
      dest: "{{ temp_dir }}/olm/odf-op.yaml"
    vars:
      operator_source: "{{ 'redhat-operators' if internet_type != 'A' else 'redhat-operator-index' }}"

  - name: Deploy ODF operator
    ansible.builtin.shell:
      cmd: "oc apply -f {{ temp_dir }}/olm/odf-op.yaml"

  - name: Wait for ODF operators appearance
    ansible.builtin.shell:
      cmd: "oc get csv -n openshift-storage --no-headers|wc -l"
    register: odf_operators
    until: "odf_operators.stdout|int == 4"
    retries: 30
    delay: 10

  - name: Wait for ODF operator availability
    ansible.builtin.shell:
      cmd: "oc get csv -n openshift-storage --no-headers -o custom-columns=STATUS:.status.phase|grep -v Succeeded|wc -l"
    register: odf_operator_status
    until: "odf_operator_status.stdout|int == 0"
    retries: 30
    delay: 10

  - name: Enable ODF console plugin in OCP UI
    ansible.builtin.shell:
      cmd: "oc patch console.operator cluster -n openshift-storage --type json -p '[{\"op\": \"add\", \"path\": \"/spec/plugins\", \"value\": [\"odf-console\"]}]'"

  - name: Configure ODF Storage Cluster file
    template:
      src: "odf-ss.j2"
      dest: "{{ temp_dir }}/olm/odf-ss.yaml"

  - name: Deploy ODF cluster
    ansible.builtin.shell:
      cmd: "oc apply -f {{ temp_dir }}/olm/odf-ss.yaml"

  - name: Wait for ODF cluster deployment
    ansible.builtin.shell:
      cmd: "oc get pvc -n openshift-storage --no-headers | grep localblock-sc | grep Bound | wc -l"
    register: ocs_status
    until: "ocs_status.stdout|int >= 3"
    retries: 100
    delay: 15

  - name: Wait - ODF installation finalization
    ansible.builtin.pause:
      minutes: 5

  - name: Deploy Ceph toolbox
    ansible.builtin.shell:
     cmd: "oc patch OCSInitialization ocsinit -n openshift-storage --type json --patch  '[{ \"op\": \"replace\", \"path\": \"/spec/enableCephTools\", \"value\": true }]'"

- name: Configure OCS default storage class
  ansible.builtin.shell:
    cmd: "{{ item.cmd }}"
  with_items:
    - { cmd: "oc patch storageclass ocs-storagecluster-cephfs -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"}}}'" }
