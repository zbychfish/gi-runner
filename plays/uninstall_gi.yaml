- hosts: bastion
  vars:
    gi_version_index:  "{{ lookup('env','GI_VERSION') }}"
    gi_namespace: "{{ lookup('env', 'GI_NAMESPACE_GI') }}"

  vars_files:
    - constants.yaml

  tasks:
  - name: Set GI variables
    set_fact:
      gi_case_version: "{{ gi_cases[gi_version_index|int] }}"

  - name: Check other configuration parameters
    fail: msg="Variable {{ item.name }} is not set"
    when: item.value == ""
    loop:
      - { name: "GI_VERSION", value: "{{ gi_version_index }}" }
      - { name: "GI_NAMESPACE_GI", value: "{{ gi_namespace }}" }

  - name: Delete GI instance
    shell:
      cmd: "oc delete guardiuminsights {{ gi_namespace }} -n {{ gi_namespace }}||true"

  - name: Delete tenant sniffer instance
    shell:
      cmd: "oc delete tenantminisnif --all -n {{ gi_namespace }}||true"

  - name: Wait for cleanup
    pause:
      minutes: 2

  - name: Wait for GI pods removal
    shell:
      cmd: "oc get pods -n {{ gi_namespace }} --no-headers|grep -v -e Running -e Completed|wc -l"
    register: gi_pods
    until: "gi_pods.stdout == \"0\""
    retries: 20
    delay: 60

  - name: Delete GI pvc's
    shell:
      cmd: "oc delete $(oc get pvc -n {{ gi_namespace }} -oname) -n {{ gi_namespace }}||true"

  - name: Uninstall GI operators
    shell:
      cmd: "IBMPAK_HOME={{ temp_dir }} IBMPAK_LAUNCH_SKIP_PREREQ_CHECK=true oc ibm-pak launch {{ gi_case_name }} --version {{ gi_case_version }} --inventory {{ gi_case_inventory_setup }} --action uninstallOperator --namespace {{ gi_namespace }} --tolerance 1 --args \"--inputDir {{ temp_dir }}/.ibm-pak/data/cases/{{ gi_case_name }}/{{ gi_case_version }}\""

  - name: Uninstall GI catalogs
    shell:
      cmd: "IBMPAK_HOME={{ temp_dir }} IBMPAK_LAUNCH_SKIP_PREREQ_CHECK=true oc ibm-pak launch {{ gi_case_name }} --version {{ gi_case_version }} --inventory {{ gi_case_inventory_setup }} --action uninstallOperator --namespace openshift-marketplace --tolerance 1 --args \"--inputDir {{ temp_dir }}/.ibm-pak/data/cases/{{ gi_case_name }}/{{ gi_case_version }}\""

  - name: Delete GI namespace
    shell:
      cmd: "oc delete namespace {{ gi_namespace }}||true "

  - name: Stop haproxy
    service:
      name: haproxy
      state: stopped

  - name: Restore initial HA proxy config
    shell:
      cmd: cp -f /etc/haproxy/haproxy.cfg.main /etc/haproxy/haproxy.cfg

  - name: Restore ldap HA proxy settings
    shell:
      cmd: cat /etc/haproxy/haproxy.cfg.ldap >> /etc/haproxy/haproxy.cfg
    when: install_ldap == 'Y'

  - name: Start HA proxy
    service:
      name: haproxy
      state: started

  - debug:
        msg:
          - "Guardium Insights uninstalled with success."

