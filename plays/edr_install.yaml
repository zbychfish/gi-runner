- name: Create all required namespaces
  shell:
    cmd: "oc create namespace {{ item }}"
  with_items:
    - "{{ edr_namespace }}"
  ignore_errors: true

- name: Download EDR case file
  shell:
    cmd: "IBMPAK_HOME={{ temp_dir }} oc ibm-pak get {{ edr_case_name }} --version {{ edr_cases[0] }} --disable-top-level-images-mode"

- name: Unpack EDR case
  shell:
    cmd: "tar -xf {{ temp_dir }}/.ibm-pak/data/cases/{{ edr_case_name }}/{{ edr_cases[0] }}/ibm-security-*.tgz -C {{ temp_dir }}/.ibm-pak/data/cases/{{ edr_case_name }}/{{ edr_cases[0] }}"

- name: Generate EDR values file
  template:
    src: edr_values.j2
    dest: "{{ temp_dir }}/.ibm-pak/data/cases/{{ edr_case_name }}/{{ edr_cases[0] }}/{{ edr_case_name }}/inventory/{{ edr_case_inventory_setup }}/files/values.conf"
  vars:
    air_gap_install: "false"
    is_proxy: "{{ 'true' if internet_type == 'P' else 'false' }}"
    repo_password: "{{ ibm_secret }}"

- name: Start EDR deployment
  shell:
    cmd: "IBMPAK_HOME={{ temp_dir }} oc ibm-pak launch -t 1 {{ edr_case_name }} --version {{ edr_cases[0] }} --inventory {{ edr_case_inventory_setup }} --namespace {{ edr_namespace }} --action install --args \"--acceptLicense true\""

- name: Wait for CPFS deployment
  shell:
    cmd: "oc get commonservice -n ibm-common-services -o json|jq -r .items[0].status.phase"
  register: cpfs_depl_status
  until: "cpfs_depl_status.stdout == \"Succeeded\""
  retries: 50
  delay: 10
  
- name: Wait for EDR deployment
  shell:
    cmd: "oc get IBMSecurityEDR -n {{ edr_namespace }} -o json|jq -r .items[0].status.conditions[0].type"
  register: edr_depl_status
  until: "edr_depl_status.stdout == \"Success\""
  retries: 200
  delay: 10
