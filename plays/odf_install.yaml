- name: Configure ODF nodes on workers
  ansible.builtin.shell:
    cmd: "oc label nodes {{ item }}.{{ domain }} cluster.ocs.openshift.io/openshift-storage='' --overwrite=true"
  with_items: "{{ odf_nodes|list if is_master_only == 'N' else master_name|list }}"
  when: is_odf_tainted == 'N'

- name: Configure ODF nodes for taint
  ansible.builtin.shell: |
    oc label nodes {{ item }}.{{ domain }} cluster.ocs.openshift.io/openshift-storage='' --overwrite=true
    oc label nodes {{ item }}.{{ domain }} node-role.kubernetes.io/infra='' --overwrite=true
  with_items: "{{ odf_name|list }}"
  when: is_odf_tainted == 'Y'

- name: Create OCS/ODF namespaces
  ansible.builtin.shell:
    cmd: "oc create namespace {{ item }} || echo 'Namespace exists'"
  with_items:
    - openshift-local-storage
    - openshift-storage

- name: Deploy local storage operator
  block:
  - name: Configure local storage operator
    ansible.builtin.template:
      src: "odf_local_storage_op.j2"
      dest: "{{ temp_dir }}/yamls/odf_local_storage_op.yaml"
    vars:
      operator_source: "{{ 'redhat-operators' if internet_type != 'A' else 'redhat-operator-index' }}"

  - name: Deploy local storage operator
    ansible.builtin.shell:
      cmd: "oc apply -f {{ temp_dir }}/yamls/odf_local_storage_op.yaml"

  - name: Wait for local storage operator
    ansible.builtin.shell:
      cmd: "oc get csv -n openshift-local-storage --no-headers -o custom-columns=STATUS:.status.phase"
    register: ls_operator_status
    until: "ls_operator_status.stdout == \"Succeeded\""
    retries: 30
    delay: 10

  - name: Configure local storage deployment file with workers
    ansible.builtin.template:
      src: "odf_local_storage_vol.j2"
      dest: "{{ temp_dir }}/yamls/odf_local_storage_vol.yaml"
    vars:
      temp_nodes: "{{ odf_nodes|list }}"
    when: is_master_only == 'N' and is_odf_tainted == 'N'

  - name: Configure local storage deployment file in taint
    ansible.builtin.template:
      src: "odf_local_storage_vol_tainted.j2"
      dest: "{{ temp_dir }}/yamls/odf_local_storage_vol.yaml"
    vars:
      temp_nodes: "{{ odf_name|list }}"
    when: is_master_only == 'N' and is_odf_tainted == 'Y'

  - name: Configure local storage deployment file with masters only
    ansible.builtin.template:
      src: "odf_local_storage_vol.j2"
      dest: "{{ temp_dir }}/yamls/odf_local_storage_vol.yaml"
    vars:
      temp_nodes: "{{ master_name|list }}"
    when: is_master_only == 'Y'

  - name: Deploy local storage
    ansible.builtin.shell:
      cmd: "oc apply -f {{ temp_dir }}/yamls/odf_local_storage_vol.yaml"

  - name: Wait for local storage deployment
    ansible.builtin.shell:
      cmd: "oc get pv | grep localblock-sc | wc -l"
    register: ls_status
    until: "ls_status.stdout|int >= 3"
    retries: 30
    delay: 10



